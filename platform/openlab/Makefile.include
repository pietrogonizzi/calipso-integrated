# -*-makefile-*-
#
# This file is part of HiKoB Openlab.
#
# HiKoB Openlab is free software: you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation, version 3.
#
# HiKoB Openlab is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with HiKoB Openlab. If not, see
# <http://www.gnu.org/licenses/>.
#
# Copyright (C) 2011,2012 HiKoB.
#

GCCPREFIX = arm-none-eabi
CC        = ${GCCPREFIX}-gcc
LD        = ${GCCPREFIX}-gcc
AS        = ${GCCPREFIX}-as
AR        = ${GCCPREFIX}-ar
NM        = ${GCCPREFIX}-nm
OBJCOPY   = ${GCCPREFIX}-objcopy
STRIP     = ${GCCPREFIX}-strip
OBJDUMP   = ${GCCPREFIX}-objdump

CFLAGS   += -DPLATFORM_OS=CONTIKI

CFLAGS   += -Os
CFLAGS   += -Wall
CFLAGS   += -Wimplicit -Wpointer-arith

CFLAGS   += -DGCC_ARMCM3 -DENABLE_DEBUG=${DEBUG}
CFLAGS   += -gdwarf-2 -fno-builtin -fsingle-precision-constant
CFLAGS   += -mcpu=cortex-m3 -mthumb -mthumb-interwork -mfix-cortex-m3-ldrd -msoft-float
CFLAGS   += -mno-unaligned-access
CFLAGS   += -ffunction-sections -fdata-sections -Wl,--gc-sections


#
# Disable problematic warnings with contiki code
#

# Incompatible with the 'generic' way of managing radio layers I think
# CFLAGS   += -Wredundant-decls
# Invalid "casts"
# CFLAGS   += -Wcast-align
# Cast const to non const
# CFLAGS   += -Wcast-qual

# Silent warnings for the moment. Clean them on contiki later.
CFLAGS   += -Wno-shadow
CFLAGS   += -Wno-unused-but-set-variable
CFLAGS   += -Wno-unused-variable
CFLAGS   += -Wno-char-subscripts
CFLAGS   += -Wno-implicit-function-declaration
CFLAGS   += -Wno-maybe-uninitialized
CFLAGS   += -fno-strict-aliasing



# escape characters conflicts with SLIP
CFLAGS   += -DNO_DEBUG_COLOR


LDFLAGS  += -nostartfiles
LDFLAGS  += -nodefaultlibs
LDFLAGS  += -T${LINKERSCRIPT}
LDFLAGS  += -mcpu=cortex-m3 -mthumb -mthumb-interwork
LDFLAGS  += -ffunction-sections -fdata-sections -Wl,--gc-sections

ifeq ($(UIP_CONF_IPV6),1)
  CFLAGS += -DWITH_UIP6=1
endif
ifdef WITH_UIP
  CFLAGS += -DWITH_UIP=1
endif


OOCD_PORT   = 123
GDB_PORT    = 3${OOCD_PORT}
TELNET_PORT = 4${OOCD_PORT}
TCL_PORT    = 5${OOCD_PORT}

OOCD      = openocd

%.od: %.$(TARGET)
	$(OBJDUMP) -S $< > $@

%.flash: %.$(TARGET)
	$(OOCD) \
	-f "${OOCD_ITF}" \
	-f "target/${OOCD_TARGET}.cfg" \
	-c "gdb_port ${GDB_PORT}" \
	-c "telnet_port ${TELNET_PORT}" \
	-c "tcl_port ${TCL_PORT}" \
	-c "init" \
	-c "targets" \
	-c "reset halt"	\
	-c "reset init"	\
	-c "flash write_image erase $<" \
	-c "verify_image $<" \
	-c "reset run" \
	-c "shutdown"

%.upload: %.flash;

##
## make debug will start a GDB SRP socket on port 3333
##

debug:
	$(OOCD) \
	-f "${OOCD_ITF}" \
	-f "target/${OOCD_TARGET}.cfg" \
	-c "tcl_port ${TCL_PORT}" \
	-c "telnet_port ${TELNET_PORT}" \
	-c "init" \
	-c "targets" \

reset:
	$(OOCD) \
	-f "${OOCD_ITF}" \
	-f "target/${OOCD_TARGET}.cfg" \
	-c "gdb_port ${GDB_PORT}" \
	-c "tcl_port ${TCL_PORT}" \
	-c "telnet_port ${TELNET_PORT}" \
	-c "init" \
	-c "targets" \
	-c "reset run" \
	-c "shutdown"




